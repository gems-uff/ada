/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.uff.ic.archd.db.dao;

import java.io.File;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.LinkedList;
import java.util.List;

/**
 *
 * @author wallace
 */
public class HsqldbArtifactBirthDao implements ArtifactBirthDao{
    
    
    private Connection connection;

    public HsqldbArtifactBirthDao() {
        try {
            File file = new File(Constants.DB_DIR);
            if (!file.exists()) {
                file.mkdirs();

            }
            Class.forName("org.hsqldb.jdbcDriver");
            System.out.println("Vai pegar conex√£o");
            connection = DriverManager.getConnection("jdbc:hsqldb:file:" + Constants.DB_DIR, "archd", "123");
            System.out.println("Pegou conexao");
            DatabaseMetaData dbData = connection.getMetaData();
            System.out.println("Vai pegar tables");
            ResultSet tables = dbData.getTables(null, null, "ARTIFACT_BIRTH", null);
            System.out.println("Pegou tables");
            //System.out.println("NEXT "+tables.next());
            if (!tables.next()) {


                System.out.println("NAO POSSUI TABELA ARTIFACTS_BIRTH");
                Statement stm = connection.createStatement();

                stm.executeUpdate("create table ARTIFACT_BIRTH (id bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1), "
                        + "artifact_signature varchar(1000),"
                        + "revision_id_birth varchar(1000),"
                        + "PRIMARY KEY (id));");
            } else {
                System.out.println("TABELA JAH EXISTE ARTIFACT_BIRTH");
            }

            //stm.execute("SHUTDOWN");

        } catch (ClassNotFoundException e) {
            System.out.println("Erro ao carregar o driver JDBC. " + e.getMessage());
        } catch (SQLException e) {
            System.out.println("Erro de SQL: " + e.getMessage());
            //e.printStackTrace();
        } catch (Exception e) {
            System.out.println("ERRO " + e.getMessage());
        }


    }

    @Override
    public void save(String artifactSignature, String revisionBirthNumber) {
        try {
            Statement stm = connection.createStatement();
            System.out.println("insert into ARTIFACT_BIRTH (artifact_signature ,"
                    + "revision_id_birth )"

                    + " VALUES ('" + artifactSignature + "',"
                    + "'" + revisionBirthNumber + "');");
            stm.executeUpdate("insert into ARTIFACT_BIRTH (artifact_signature ,"
                    + "revision_id_birth )"

                    + " VALUES ('" + artifactSignature + "',"
                    + "'" + revisionBirthNumber + "');");

            

        } catch (SQLException e) {
            System.out.println("ERRO: " + e.getMessage());
        }
    }

    @Override
    public String getBirthIdBirth(String artifactSignature) {
        String revisionbirthId = null;
        try {
            Statement stm = connection.createStatement();
            ResultSet rs = null;
            rs = stm.executeQuery("select * from ARTIFACT_BIRTH where artifact_signature='" + artifactSignature+ "' order by id desc;");
            
            while(rs.next()){
                revisionbirthId = rs.getString("revision_id_birth");
            }
            
            //stm.execute("SHUTDOWN");
        } catch (Exception e) {
            System.out.println("ERRO: " + e.getMessage());
        }
        
        return revisionbirthId;
    }

    @Override
    public List<String> getArtifactsBorn(String revisionBirthNumber) {
        List<String> list = new LinkedList();
        try {
            Statement stm = connection.createStatement();
            ResultSet rs = null;
            rs = stm.executeQuery("select * from ARTIFACT_BIRTH where revision_id_birth='" + revisionBirthNumber+ "';");
            
            while(rs.next()){
                list.add(rs.getString("artifact_signature"));
            }
            
            //stm.execute("SHUTDOWN");
        } catch (Exception e) {
            System.out.println("ERRO: " + e.getMessage());
        }
        return list;
    }
    
    @Override
    public void printAll(){
        try {
            Statement stm = connection.createStatement();
            ResultSet rs = null;
            rs = stm.executeQuery("select * from ARTIFACT_BIRTH;");
            
            while(rs.next()){
                System.out.println("Artifact Signature: "+rs.getString("artifact_signature")+"   birth: "+rs.getString("revision_id_birth"));
            }
            
            //stm.execute("SHUTDOWN");
        } catch (Exception e) {
            System.out.println("ERRO: " + e.getMessage());
        }
    }

    @Override
    public void save(List<String> artifactSignatures, String revisionBirthNumber) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
}
